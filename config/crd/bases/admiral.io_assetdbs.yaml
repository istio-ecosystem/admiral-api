---
apiVersion: apiextensions.k8s.io/v1
kind: CustomResourceDefinition
metadata:
  annotations:
    controller-gen.kubebuilder.io/version: v0.12.0
  name: assetdbs.admiral.io
spec:
  group: admiral.io
  names:
    kind: AssetDB
    listKind: AssetDBList
    plural: assetdbs
    singular: assetdb
  scope: Namespaced
  versions:
  - name: v1
    schema:
      openAPIV3Schema:
        description: AssetDB is the Schema for the assetdbs API
        properties:
          apiVersion:
            description: 'APIVersion defines the versioned schema of this representation
              of an object. Servers should convert recognized schemas to the latest
              internal value, and may reject unrecognized values. More info: https://git.k8s.io/community/contributors/devel/sig-architecture/api-conventions.md#resources'
            type: string
          kind:
            description: 'Kind is a string value representing the REST resource this
              object represents. Servers may infer this from the endpoint the client
              submits requests to. Cannot be updated. In CamelCase. More info: https://git.k8s.io/community/contributors/devel/sig-architecture/api-conventions.md#types-kinds'
            type: string
          metadata:
            type: object
          spec:
            description: AssetDBSpec defines the desired state of AssetDB
            properties:
              assetname:
                description: Foo is an example field of AssetDB. Edit assetdb_types.go
                  to remove/update
                type: string
              clusters:
                items:
                  properties:
                    environment:
                      items:
                        type: string
                      type: array
                    name:
                      type: string
                  type: object
                type: array
            type: object
          status:
            description: AssetDBStatus defines the observed state of AssetDB
            type: object
        type: object
    served: true
    storage: true
    subresources:
      status: {}
